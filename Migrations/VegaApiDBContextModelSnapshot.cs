// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VegaIoTApi.Data;

namespace VegaIoTApi.Migrations
{
    [DbContext(typeof(VegaApiDBContext))]
    partial class VegaApiDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("VegaIoTWebService.Data.Models.VegaTempDevice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Eui")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Eui");

                    b.ToTable("TempDevices");
                });

            modelBuilder.Entity("VegaIoTWebService.Data.Models.VegaTempDeviceData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<short>("BatteryLevel")
                        .HasColumnType("smallint");

                    b.Property<long>("DeviceId")
                        .HasColumnType("bigint");

                    b.Property<short>("HighLimit")
                        .HasColumnType("smallint");

                    b.Property<short>("LowLimit")
                        .HasColumnType("smallint");

                    b.Property<bool>("PushTheLimit")
                        .HasColumnType("boolean");

                    b.Property<short>("Temperature")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("Uptime")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("TempDeviceData");
                });

            modelBuilder.Entity("VegaIoTWebService.Data.Models.VegaTempDeviceData", b =>
                {
                    b.HasOne("VegaIoTWebService.Data.Models.VegaTempDevice", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
